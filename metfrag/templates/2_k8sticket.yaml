{{- if .Values.k8sTicket.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8sticket
  labels:
    {{- include "k8sticket.labels" . | nindent 4 }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8sticket.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "k8sticket.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: ipbhalle/k8sticket
        imagePullPolicy: Always
        name: k8sticket
        ports:
        - containerPort: 9001
          name: serviceport
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: k8sticket-watcher
      serviceAccountName: k8sticket-watcher
      terminationGracePeriodSeconds: 30
{{- end -}}
